version: '3'
services:
  # Frontend NodeJS
  game-backend:
    build:
      context: ./game_backend/
    command: npm start
    volumes:
      - ./game_backend/:/usr/app
      - /usr/app/node_modules
    networks:
      - game_network
    ports:
      - "3030:3000"

  # PHP 8
  game_php8:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    image: common_php8/latest
    container_name: game_php8
    restart: unless-stopped
    tty: true
#    command:
#      --enable-zts
    environment:
      SERVICE_NAME: game_php8
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./game_frontend/:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - game_network

  # Nginx Service
  game_nginx:
    image: nginx:alpine
    container_name: game_nginx
    restart: unless-stopped
    tty: true
    ports:
      - "84:80"
      - "442:443"
    volumes:
      - ./game_frontend/:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - game_network

  #MySQL Services
  game_mysql8:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: game_mysql8
    ports:
      - "3302:3306"
    environment:
      MYSQL_DATABASE: looter_shooter
      MYSQL_ROOT_PASSWORD: 132
      MYSQL_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - game_network

  #Redis Service
  game_redis:
    image: "redis:alpine"
    container_name: game_redis
    restart: unless-stopped
    tty: true
    command: redis-server
    ports:
      - "6372:6379"
    networks:
      - game_network

#Docker Networks
networks:
  game_network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
